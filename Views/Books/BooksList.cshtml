@model X.PagedList.IPagedList<JToken>

@using X.PagedList.Mvc.Core

@{
    var authorName = ViewBag.AuthorName as string;
    ViewData["Title"] = $"Books by {authorName}";
}

<h2>@ViewData["Title"]</h2>

@if (Model.Count > 0)
{
    <div class="container">
        <div class="row">
            @foreach (var book in Model)
            {
                <div class="col-md-3 col-sm-6 mb-4">
                    <div class="card" style="width: 18rem;">
                        @if (book["cover_i"] != null)
                        {
                            <img class="card-img-top" src="https://covers.openlibrary.org/b/id/@book["cover_i"]-M.jpg" alt="Book Cover">
                        }
                        <div class="card-body">
                            <h5 class="card-title">@book["title"]?.ToString()</h5>
                            <p class="card-text">
                                <strong>Authors:</strong> @string.Join(", ", (book["author_name"] as JArray)?.Select(a => a?.ToString()) ?? new string[0]) <br />
                                @if (!string.IsNullOrEmpty(book["oldest_publish_date"]?.ToString()))
                                {
                                    <strong>Oldest Publish Date:</strong> @book["oldest_publish_date"]?.ToString() <br />
                                }
                            </p>
                        </div>
                    </div>
                </div>
            }
        </div>

        <div class="row">
            <div class="col-12">
                <nav aria-label="Page navigation">
                    <ul class="pagination justify-content-center">
                        @if (Model.HasPreviousPage)
                        {
                            <li class="page-item">
                                <a class="page-link" href="@Url.Action("Search", new { page = Model.PageNumber - 1, author = ViewBag.AuthorName })" aria-label="Previous">
                                    <span aria-hidden="true">&laquo;</span>
                                </a>
                            </li>
                        }

                        @for (var i = 1; i <= Model.PageCount; i++)
                        {
                            <li class="page-item @(i == Model.PageNumber ? "active" : "")">
                                <a class="page-link" href="@Url.Action("Search", new { page = i, author = ViewBag.AuthorName })">@i</a>
                            </li>
                        }

                        @if (Model.HasNextPage)
                        {
                            <li class="page-item">
                                <a class="page-link" href="@Url.Action("Search", new { page = Model.PageNumber + 1, author = ViewBag.AuthorName })" aria-label="Next">
                                    <span aria-hidden="true">&raquo;</span>
                                </a>
                            </li>
                        }
                    </ul>
                </nav>
            </div>
        </div>
    </div>
}
else
{
    <p>No books found for the given author.</p>
}
